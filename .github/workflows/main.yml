name: CI

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches: [ master, develop]
    tags:
      - ORA-*
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:
    inputs:
      integration-tests:
        description: 'Run Integration Tests'
        required: false
        default: "false"

env:
  IT: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') || github.event_name == 'schedule' || github.event.inputs.integration-tests == 'true' }}

jobs:
  build:
    if: ${{ !env.IT }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn --batch-mode clean install

  integration-test:
    if: ${{ env.IT }}
    runs-on: ubuntu-latest
    steps:
      - name: Determine branch
        id: ref
        # Checkout develop on nightly builds
        run: |
          if ${{ github.event_name == 'schedule' }}
          then
            echo "::set-output name=ref::refs/heads/develop"
          else
            echo "::set-output name=ref::${{ github.ref }}"
          fi
      - uses: actions/checkout@v2
        with:
          ref: ${{steps.ref.outputs.ref}}
      - name: Setup Java JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven and run Integration Tests
        run: mvn --batch-mode clean install -PrunIT

  release:
    # Only run when tags are pushed
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [integration-test]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn --batch-mode clean install -DskipTests
      - name: Build binaries and zip it
        run: ./ora.sh export openrobertalab_binaries gzip && zip -r openrobertalab_binaries.zip openrobertalab_binaries/
      - name: Build Changelog
        uses: OpenRoberta/gh-actions-issue-changelog@v1
        id: changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{steps.changelog.outputs.changelog}}
          files: openrobertalab_binaries.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [integration-test]
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get Tag name
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/ORA-}
      - name: Build standalone
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Docker/openroberta/conf/y-standalone-lab/Dockerfile
          platforms: linux/arm/v7, linux/amd64
          push: true
          tags: openroberta/standalone:latest, openroberta/standalone:${{ steps.tag.outputs.tag }}
      - name: Build docker for lab
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Docker/openroberta/conf/y-docker-for-lab-ci/Dockerfile
          platforms: linux/amd64
          push: true
          tags: openroberta/server-dev:${{ steps.tag.outputs.tag }}